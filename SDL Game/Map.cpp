#include "Map.h"
#include "TextureManager.h"

int lvl1[20][25] = {
	{0,0,0,2,1,1,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,2,2,1,1,2,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,2,1,1,1,0,0,0,1,1,1,2,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,1,2,1,1,1,1,1,1,1,1,2,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,1,1,2,1,1,1,1,1,2,2,2,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,2,2,2,2,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
};

Map::Map()
{
	dirt = TextureManager::LoadTexture("Assets/dirt.png");
	grass = TextureManager::LoadTexture("Assets/grass.png");
	water = TextureManager::LoadTexture("Assets/water.png");

	LoadMap(lvl1);

	src.x = src.y = 0;
	src.w = src.h = 32;
	dest.h = dest.w = 32;

	dest.x = dest.y = 0;
}

void Map::LoadMap(int arr[20][25])
{
	for (int i = 0; i < 20; i++)
	{
		for (int j = 0; j < 25; j++)
		{
			map[i][j] = arr[i][j];
		}
	}
}

void Map::DrawMap()
{
	int tile = 0;

	for (int i = 0; i < 20; i++)
	{
		for (int j = 0; j < 25; j++)
		{
			tile = map[i][j];
			dest.x = i * 32;
			dest.y = j * 32;


			switch (tile)
			{
			case 0:
				TextureManager::Draw(water, src, dest);
				break;
			case 1:
				TextureManager::Draw(grass, src, dest);
				break;
			case 2:
				TextureManager::Draw(dirt, src, dest);
				break;
			default:
				break;
			}
		}
	}
}
bool Map::CollisionQuery(int x,int y)
{
	cout << x << " " << y << endl;
	cout << x / 32 << " " << y / 32 << " " << map[x / 32][y / 32] << endl;
	if (x < 0 || y < 0)
	{
		return true;
	}
	else if (map[x / 32][y/ 32] == 2)
	{
		return true;
	}
	else
	{
		return false;
	}
}